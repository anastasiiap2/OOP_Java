public class SquareRoot {

    public static void main(String[] args)
    {
        double a = 3;
        double b = 2.5;
        double c = -0.5;

        
        double x1, x2;
        double D;
        D = b * b - 4 * a * c;
        if(D > 0 && D < 100)
        {
            x1 = (-b + Math.sqrt(D)) / (2*a);
            x2 = (-b - Math.sqrt(D)) / (2*a);
            System.out.println("x1="+ x1);
            System.out.println("x2="+ x2);
        }
       
        else if(D == 0 && a == 0 && b == 0 && c >= 0)
        {
            System.out.println("x1=");
            System.out.println("x2=");
        }
        else if(D == 0)
        {
            double x;
            x = (-b - Math.sqrt(D)) / (2 * a);
            System.out.println("x1=" + x);
            System.out.println("x2=" + x);
        }
        else if(D < 0)
        {
            System.out.println("x1=");
            System.out.println("x2=");
        }
        else if (D == 100)
        {
            System.out.println("x1=0.0");
            System.out.println("x2=0.0");
        }
    }
}

	
  
  
  
  
  public class MatrixPrint {
 public static void main(String args[]){
  for (int i = 0; i < 5; ++i) {
   for (int j = 1; j <= 5; ++j) {
    String num = (i == j - 1 || j == 5 - i) ? " * " : (i * 5 + j > 9) ? (i * 5 + j) + " " : " " + (i * 5 + j) + " ";
    System.out.print(num);
   }
   System.out.println();
  }
 }
}




public class ArraySort {

	public static void main(String[] args) {
	        int[] array = {30, 2, 10, 4, 6};
	        int length = array.length;
	        bubbleSort(array);
	        for (int i = 0; i < length; i++) {
	            System.out.print(array[i] + " ");
	        }
	    }
	private static void bubbleSort(int[] arr) {  
        int n = arr.length;  
        int t = 0;  
         for(int i=0; i < n; i++){  
                 for(int j=1; j < (n-i); j++){  
                          if(arr[j-1] > arr[j]){  
                                 //swap elements  
                                 t = arr[j-1];  
                                 arr[j-1] = arr[j];  
                                 arr[j] = t;  
                         }  
                          
                 }  
         }  
  
    }     
}  
		
      
      
      
      
      public class ShellSort {

	public static void main(String[] args) {
		int[] array = {30, 2, 10, 4, 6};
		int length = array.length;

		//PUT YOUR CODE HERE

		//PUT YOUR CODE HERE
	    
		for (int i = 0; i < length; i++) {
			System.out.print(array[i] + " ");
		}
	}
}        
		
      
      
      
      
      public class BinarySearch {

	public static void main(String[] args) {
		
		int data[] = { 3, 6, 7, 10, 34, 56, 60 };
		int numberToFind = 10;
		int lower = 0, upper = data.length-1;
		while(lower<=upper) {
			int middle = lower + (upper-lower)/2;
				
			if (data[lower] == numberToFind) {
				System.out.println(lower);
				break;
			}
			
			if(data[middle] > numberToFind) {
				upper=middle-1;
			}
			if (data[middle] < numberToFind) {
				lower=middle + 1;
			}
			if(data[middle] == numberToFind) {
				System.out.println(middle);
				break;
			}
			if (lower>upper) System.out.println(-1);

		} 
		
	}
}

      
